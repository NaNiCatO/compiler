Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    EQ
    ERR
    GT
    GTE
    INTDIV
    LT
    LTE
    NEQ

Grammar

Rule 0     S' -> expression
Rule 1     expression -> VAR ASSIGN expression
Rule 2     expression -> expression ADD expression
Rule 3     expression -> expression SUB expression
Rule 4     expression -> expression MUL expression
Rule 5     expression -> expression DIV expression
Rule 6     expression -> expression POW expression
Rule 7     expression -> LPAREN expression RPAREN
Rule 8     expression -> INT
Rule 9     expression -> REAL
Rule 10    expression -> VAR
Rule 11    expression -> VAR ASSIGN LIST LBRACKET INT RBRACKET
Rule 12    expression -> VAR LBRACKET INT RBRACKET
Rule 13    expression -> SIN LPAREN expression RPAREN
Rule 14    expression -> COS LPAREN expression RPAREN
Rule 15    expression -> TAN LPAREN expression RPAREN

Terminals, with rules where they appear

ADD                  : 2
ASSIGN               : 1 11
COS                  : 14
DIV                  : 5
EQ                   : 
ERR                  : 
GT                   : 
GTE                  : 
INT                  : 8 11 12
INTDIV               : 
LBRACKET             : 11 12
LIST                 : 11
LPAREN               : 7 13 14 15
LT                   : 
LTE                  : 
MUL                  : 4
NEQ                  : 
POW                  : 6
RBRACKET             : 11 12
REAL                 : 9
RPAREN               : 7 13 14 15
SIN                  : 13
SUB                  : 3
TAN                  : 15
VAR                  : 1 10 11 12
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 2 3 3 4 4 5 5 6 6 7 13 14 15 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . VAR ASSIGN expression
    (2) expression -> . expression ADD expression
    (3) expression -> . expression SUB expression
    (4) expression -> . expression MUL expression
    (5) expression -> . expression DIV expression
    (6) expression -> . expression POW expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . INT
    (9) expression -> . REAL
    (10) expression -> . VAR
    (11) expression -> . VAR ASSIGN LIST LBRACKET INT RBRACKET
    (12) expression -> . VAR LBRACKET INT RBRACKET
    (13) expression -> . SIN LPAREN expression RPAREN
    (14) expression -> . COS LPAREN expression RPAREN
    (15) expression -> . TAN LPAREN expression RPAREN

    VAR             shift and go to state 2
    LPAREN          shift and go to state 3
    INT             shift and go to state 4
    REAL            shift and go to state 5
    SIN             shift and go to state 6
    COS             shift and go to state 7
    TAN             shift and go to state 8

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (2) expression -> expression . ADD expression
    (3) expression -> expression . SUB expression
    (4) expression -> expression . MUL expression
    (5) expression -> expression . DIV expression
    (6) expression -> expression . POW expression

    ADD             shift and go to state 9
    SUB             shift and go to state 10
    MUL             shift and go to state 11
    DIV             shift and go to state 12
    POW             shift and go to state 13


state 2

    (1) expression -> VAR . ASSIGN expression
    (10) expression -> VAR .
    (11) expression -> VAR . ASSIGN LIST LBRACKET INT RBRACKET
    (12) expression -> VAR . LBRACKET INT RBRACKET

    ASSIGN          shift and go to state 14
    ADD             reduce using rule 10 (expression -> VAR .)
    SUB             reduce using rule 10 (expression -> VAR .)
    MUL             reduce using rule 10 (expression -> VAR .)
    DIV             reduce using rule 10 (expression -> VAR .)
    POW             reduce using rule 10 (expression -> VAR .)
    $end            reduce using rule 10 (expression -> VAR .)
    RPAREN          reduce using rule 10 (expression -> VAR .)
    LBRACKET        shift and go to state 15


state 3

    (7) expression -> LPAREN . expression RPAREN
    (1) expression -> . VAR ASSIGN expression
    (2) expression -> . expression ADD expression
    (3) expression -> . expression SUB expression
    (4) expression -> . expression MUL expression
    (5) expression -> . expression DIV expression
    (6) expression -> . expression POW expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . INT
    (9) expression -> . REAL
    (10) expression -> . VAR
    (11) expression -> . VAR ASSIGN LIST LBRACKET INT RBRACKET
    (12) expression -> . VAR LBRACKET INT RBRACKET
    (13) expression -> . SIN LPAREN expression RPAREN
    (14) expression -> . COS LPAREN expression RPAREN
    (15) expression -> . TAN LPAREN expression RPAREN

    VAR             shift and go to state 2
    LPAREN          shift and go to state 3
    INT             shift and go to state 4
    REAL            shift and go to state 5
    SIN             shift and go to state 6
    COS             shift and go to state 7
    TAN             shift and go to state 8

    expression                     shift and go to state 16

state 4

    (8) expression -> INT .

    ADD             reduce using rule 8 (expression -> INT .)
    SUB             reduce using rule 8 (expression -> INT .)
    MUL             reduce using rule 8 (expression -> INT .)
    DIV             reduce using rule 8 (expression -> INT .)
    POW             reduce using rule 8 (expression -> INT .)
    $end            reduce using rule 8 (expression -> INT .)
    RPAREN          reduce using rule 8 (expression -> INT .)


state 5

    (9) expression -> REAL .

    ADD             reduce using rule 9 (expression -> REAL .)
    SUB             reduce using rule 9 (expression -> REAL .)
    MUL             reduce using rule 9 (expression -> REAL .)
    DIV             reduce using rule 9 (expression -> REAL .)
    POW             reduce using rule 9 (expression -> REAL .)
    $end            reduce using rule 9 (expression -> REAL .)
    RPAREN          reduce using rule 9 (expression -> REAL .)


state 6

    (13) expression -> SIN . LPAREN expression RPAREN

    LPAREN          shift and go to state 17


state 7

    (14) expression -> COS . LPAREN expression RPAREN

    LPAREN          shift and go to state 18


state 8

    (15) expression -> TAN . LPAREN expression RPAREN

    LPAREN          shift and go to state 19


state 9

    (2) expression -> expression ADD . expression
    (1) expression -> . VAR ASSIGN expression
    (2) expression -> . expression ADD expression
    (3) expression -> . expression SUB expression
    (4) expression -> . expression MUL expression
    (5) expression -> . expression DIV expression
    (6) expression -> . expression POW expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . INT
    (9) expression -> . REAL
    (10) expression -> . VAR
    (11) expression -> . VAR ASSIGN LIST LBRACKET INT RBRACKET
    (12) expression -> . VAR LBRACKET INT RBRACKET
    (13) expression -> . SIN LPAREN expression RPAREN
    (14) expression -> . COS LPAREN expression RPAREN
    (15) expression -> . TAN LPAREN expression RPAREN

    VAR             shift and go to state 2
    LPAREN          shift and go to state 3
    INT             shift and go to state 4
    REAL            shift and go to state 5
    SIN             shift and go to state 6
    COS             shift and go to state 7
    TAN             shift and go to state 8

    expression                     shift and go to state 20

state 10

    (3) expression -> expression SUB . expression
    (1) expression -> . VAR ASSIGN expression
    (2) expression -> . expression ADD expression
    (3) expression -> . expression SUB expression
    (4) expression -> . expression MUL expression
    (5) expression -> . expression DIV expression
    (6) expression -> . expression POW expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . INT
    (9) expression -> . REAL
    (10) expression -> . VAR
    (11) expression -> . VAR ASSIGN LIST LBRACKET INT RBRACKET
    (12) expression -> . VAR LBRACKET INT RBRACKET
    (13) expression -> . SIN LPAREN expression RPAREN
    (14) expression -> . COS LPAREN expression RPAREN
    (15) expression -> . TAN LPAREN expression RPAREN

    VAR             shift and go to state 2
    LPAREN          shift and go to state 3
    INT             shift and go to state 4
    REAL            shift and go to state 5
    SIN             shift and go to state 6
    COS             shift and go to state 7
    TAN             shift and go to state 8

    expression                     shift and go to state 21

state 11

    (4) expression -> expression MUL . expression
    (1) expression -> . VAR ASSIGN expression
    (2) expression -> . expression ADD expression
    (3) expression -> . expression SUB expression
    (4) expression -> . expression MUL expression
    (5) expression -> . expression DIV expression
    (6) expression -> . expression POW expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . INT
    (9) expression -> . REAL
    (10) expression -> . VAR
    (11) expression -> . VAR ASSIGN LIST LBRACKET INT RBRACKET
    (12) expression -> . VAR LBRACKET INT RBRACKET
    (13) expression -> . SIN LPAREN expression RPAREN
    (14) expression -> . COS LPAREN expression RPAREN
    (15) expression -> . TAN LPAREN expression RPAREN

    VAR             shift and go to state 2
    LPAREN          shift and go to state 3
    INT             shift and go to state 4
    REAL            shift and go to state 5
    SIN             shift and go to state 6
    COS             shift and go to state 7
    TAN             shift and go to state 8

    expression                     shift and go to state 22

state 12

    (5) expression -> expression DIV . expression
    (1) expression -> . VAR ASSIGN expression
    (2) expression -> . expression ADD expression
    (3) expression -> . expression SUB expression
    (4) expression -> . expression MUL expression
    (5) expression -> . expression DIV expression
    (6) expression -> . expression POW expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . INT
    (9) expression -> . REAL
    (10) expression -> . VAR
    (11) expression -> . VAR ASSIGN LIST LBRACKET INT RBRACKET
    (12) expression -> . VAR LBRACKET INT RBRACKET
    (13) expression -> . SIN LPAREN expression RPAREN
    (14) expression -> . COS LPAREN expression RPAREN
    (15) expression -> . TAN LPAREN expression RPAREN

    VAR             shift and go to state 2
    LPAREN          shift and go to state 3
    INT             shift and go to state 4
    REAL            shift and go to state 5
    SIN             shift and go to state 6
    COS             shift and go to state 7
    TAN             shift and go to state 8

    expression                     shift and go to state 23

state 13

    (6) expression -> expression POW . expression
    (1) expression -> . VAR ASSIGN expression
    (2) expression -> . expression ADD expression
    (3) expression -> . expression SUB expression
    (4) expression -> . expression MUL expression
    (5) expression -> . expression DIV expression
    (6) expression -> . expression POW expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . INT
    (9) expression -> . REAL
    (10) expression -> . VAR
    (11) expression -> . VAR ASSIGN LIST LBRACKET INT RBRACKET
    (12) expression -> . VAR LBRACKET INT RBRACKET
    (13) expression -> . SIN LPAREN expression RPAREN
    (14) expression -> . COS LPAREN expression RPAREN
    (15) expression -> . TAN LPAREN expression RPAREN

    VAR             shift and go to state 2
    LPAREN          shift and go to state 3
    INT             shift and go to state 4
    REAL            shift and go to state 5
    SIN             shift and go to state 6
    COS             shift and go to state 7
    TAN             shift and go to state 8

    expression                     shift and go to state 24

state 14

    (1) expression -> VAR ASSIGN . expression
    (11) expression -> VAR ASSIGN . LIST LBRACKET INT RBRACKET
    (1) expression -> . VAR ASSIGN expression
    (2) expression -> . expression ADD expression
    (3) expression -> . expression SUB expression
    (4) expression -> . expression MUL expression
    (5) expression -> . expression DIV expression
    (6) expression -> . expression POW expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . INT
    (9) expression -> . REAL
    (10) expression -> . VAR
    (11) expression -> . VAR ASSIGN LIST LBRACKET INT RBRACKET
    (12) expression -> . VAR LBRACKET INT RBRACKET
    (13) expression -> . SIN LPAREN expression RPAREN
    (14) expression -> . COS LPAREN expression RPAREN
    (15) expression -> . TAN LPAREN expression RPAREN

    LIST            shift and go to state 26
    VAR             shift and go to state 2
    LPAREN          shift and go to state 3
    INT             shift and go to state 4
    REAL            shift and go to state 5
    SIN             shift and go to state 6
    COS             shift and go to state 7
    TAN             shift and go to state 8

    expression                     shift and go to state 25

state 15

    (12) expression -> VAR LBRACKET . INT RBRACKET

    INT             shift and go to state 27


state 16

    (7) expression -> LPAREN expression . RPAREN
    (2) expression -> expression . ADD expression
    (3) expression -> expression . SUB expression
    (4) expression -> expression . MUL expression
    (5) expression -> expression . DIV expression
    (6) expression -> expression . POW expression

    RPAREN          shift and go to state 28
    ADD             shift and go to state 9
    SUB             shift and go to state 10
    MUL             shift and go to state 11
    DIV             shift and go to state 12
    POW             shift and go to state 13


state 17

    (13) expression -> SIN LPAREN . expression RPAREN
    (1) expression -> . VAR ASSIGN expression
    (2) expression -> . expression ADD expression
    (3) expression -> . expression SUB expression
    (4) expression -> . expression MUL expression
    (5) expression -> . expression DIV expression
    (6) expression -> . expression POW expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . INT
    (9) expression -> . REAL
    (10) expression -> . VAR
    (11) expression -> . VAR ASSIGN LIST LBRACKET INT RBRACKET
    (12) expression -> . VAR LBRACKET INT RBRACKET
    (13) expression -> . SIN LPAREN expression RPAREN
    (14) expression -> . COS LPAREN expression RPAREN
    (15) expression -> . TAN LPAREN expression RPAREN

    VAR             shift and go to state 2
    LPAREN          shift and go to state 3
    INT             shift and go to state 4
    REAL            shift and go to state 5
    SIN             shift and go to state 6
    COS             shift and go to state 7
    TAN             shift and go to state 8

    expression                     shift and go to state 29

state 18

    (14) expression -> COS LPAREN . expression RPAREN
    (1) expression -> . VAR ASSIGN expression
    (2) expression -> . expression ADD expression
    (3) expression -> . expression SUB expression
    (4) expression -> . expression MUL expression
    (5) expression -> . expression DIV expression
    (6) expression -> . expression POW expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . INT
    (9) expression -> . REAL
    (10) expression -> . VAR
    (11) expression -> . VAR ASSIGN LIST LBRACKET INT RBRACKET
    (12) expression -> . VAR LBRACKET INT RBRACKET
    (13) expression -> . SIN LPAREN expression RPAREN
    (14) expression -> . COS LPAREN expression RPAREN
    (15) expression -> . TAN LPAREN expression RPAREN

    VAR             shift and go to state 2
    LPAREN          shift and go to state 3
    INT             shift and go to state 4
    REAL            shift and go to state 5
    SIN             shift and go to state 6
    COS             shift and go to state 7
    TAN             shift and go to state 8

    expression                     shift and go to state 30

state 19

    (15) expression -> TAN LPAREN . expression RPAREN
    (1) expression -> . VAR ASSIGN expression
    (2) expression -> . expression ADD expression
    (3) expression -> . expression SUB expression
    (4) expression -> . expression MUL expression
    (5) expression -> . expression DIV expression
    (6) expression -> . expression POW expression
    (7) expression -> . LPAREN expression RPAREN
    (8) expression -> . INT
    (9) expression -> . REAL
    (10) expression -> . VAR
    (11) expression -> . VAR ASSIGN LIST LBRACKET INT RBRACKET
    (12) expression -> . VAR LBRACKET INT RBRACKET
    (13) expression -> . SIN LPAREN expression RPAREN
    (14) expression -> . COS LPAREN expression RPAREN
    (15) expression -> . TAN LPAREN expression RPAREN

    VAR             shift and go to state 2
    LPAREN          shift and go to state 3
    INT             shift and go to state 4
    REAL            shift and go to state 5
    SIN             shift and go to state 6
    COS             shift and go to state 7
    TAN             shift and go to state 8

    expression                     shift and go to state 31

state 20

    (2) expression -> expression ADD expression .
    (2) expression -> expression . ADD expression
    (3) expression -> expression . SUB expression
    (4) expression -> expression . MUL expression
    (5) expression -> expression . DIV expression
    (6) expression -> expression . POW expression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POW resolved as shift
    $end            reduce using rule 2 (expression -> expression ADD expression .)
    RPAREN          reduce using rule 2 (expression -> expression ADD expression .)
    ADD             shift and go to state 9
    SUB             shift and go to state 10
    MUL             shift and go to state 11
    DIV             shift and go to state 12
    POW             shift and go to state 13

  ! ADD             [ reduce using rule 2 (expression -> expression ADD expression .) ]
  ! SUB             [ reduce using rule 2 (expression -> expression ADD expression .) ]
  ! MUL             [ reduce using rule 2 (expression -> expression ADD expression .) ]
  ! DIV             [ reduce using rule 2 (expression -> expression ADD expression .) ]
  ! POW             [ reduce using rule 2 (expression -> expression ADD expression .) ]


state 21

    (3) expression -> expression SUB expression .
    (2) expression -> expression . ADD expression
    (3) expression -> expression . SUB expression
    (4) expression -> expression . MUL expression
    (5) expression -> expression . DIV expression
    (6) expression -> expression . POW expression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POW resolved as shift
    $end            reduce using rule 3 (expression -> expression SUB expression .)
    RPAREN          reduce using rule 3 (expression -> expression SUB expression .)
    ADD             shift and go to state 9
    SUB             shift and go to state 10
    MUL             shift and go to state 11
    DIV             shift and go to state 12
    POW             shift and go to state 13

  ! ADD             [ reduce using rule 3 (expression -> expression SUB expression .) ]
  ! SUB             [ reduce using rule 3 (expression -> expression SUB expression .) ]
  ! MUL             [ reduce using rule 3 (expression -> expression SUB expression .) ]
  ! DIV             [ reduce using rule 3 (expression -> expression SUB expression .) ]
  ! POW             [ reduce using rule 3 (expression -> expression SUB expression .) ]


state 22

    (4) expression -> expression MUL expression .
    (2) expression -> expression . ADD expression
    (3) expression -> expression . SUB expression
    (4) expression -> expression . MUL expression
    (5) expression -> expression . DIV expression
    (6) expression -> expression . POW expression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POW resolved as shift
    $end            reduce using rule 4 (expression -> expression MUL expression .)
    RPAREN          reduce using rule 4 (expression -> expression MUL expression .)
    ADD             shift and go to state 9
    SUB             shift and go to state 10
    MUL             shift and go to state 11
    DIV             shift and go to state 12
    POW             shift and go to state 13

  ! ADD             [ reduce using rule 4 (expression -> expression MUL expression .) ]
  ! SUB             [ reduce using rule 4 (expression -> expression MUL expression .) ]
  ! MUL             [ reduce using rule 4 (expression -> expression MUL expression .) ]
  ! DIV             [ reduce using rule 4 (expression -> expression MUL expression .) ]
  ! POW             [ reduce using rule 4 (expression -> expression MUL expression .) ]


state 23

    (5) expression -> expression DIV expression .
    (2) expression -> expression . ADD expression
    (3) expression -> expression . SUB expression
    (4) expression -> expression . MUL expression
    (5) expression -> expression . DIV expression
    (6) expression -> expression . POW expression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POW resolved as shift
    $end            reduce using rule 5 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 5 (expression -> expression DIV expression .)
    ADD             shift and go to state 9
    SUB             shift and go to state 10
    MUL             shift and go to state 11
    DIV             shift and go to state 12
    POW             shift and go to state 13

  ! ADD             [ reduce using rule 5 (expression -> expression DIV expression .) ]
  ! SUB             [ reduce using rule 5 (expression -> expression DIV expression .) ]
  ! MUL             [ reduce using rule 5 (expression -> expression DIV expression .) ]
  ! DIV             [ reduce using rule 5 (expression -> expression DIV expression .) ]
  ! POW             [ reduce using rule 5 (expression -> expression DIV expression .) ]


state 24

    (6) expression -> expression POW expression .
    (2) expression -> expression . ADD expression
    (3) expression -> expression . SUB expression
    (4) expression -> expression . MUL expression
    (5) expression -> expression . DIV expression
    (6) expression -> expression . POW expression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POW resolved as shift
    $end            reduce using rule 6 (expression -> expression POW expression .)
    RPAREN          reduce using rule 6 (expression -> expression POW expression .)
    ADD             shift and go to state 9
    SUB             shift and go to state 10
    MUL             shift and go to state 11
    DIV             shift and go to state 12
    POW             shift and go to state 13

  ! ADD             [ reduce using rule 6 (expression -> expression POW expression .) ]
  ! SUB             [ reduce using rule 6 (expression -> expression POW expression .) ]
  ! MUL             [ reduce using rule 6 (expression -> expression POW expression .) ]
  ! DIV             [ reduce using rule 6 (expression -> expression POW expression .) ]
  ! POW             [ reduce using rule 6 (expression -> expression POW expression .) ]


state 25

    (1) expression -> VAR ASSIGN expression .
    (2) expression -> expression . ADD expression
    (3) expression -> expression . SUB expression
    (4) expression -> expression . MUL expression
    (5) expression -> expression . DIV expression
    (6) expression -> expression . POW expression

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for POW resolved as shift
    $end            reduce using rule 1 (expression -> VAR ASSIGN expression .)
    RPAREN          reduce using rule 1 (expression -> VAR ASSIGN expression .)
    ADD             shift and go to state 9
    SUB             shift and go to state 10
    MUL             shift and go to state 11
    DIV             shift and go to state 12
    POW             shift and go to state 13

  ! ADD             [ reduce using rule 1 (expression -> VAR ASSIGN expression .) ]
  ! SUB             [ reduce using rule 1 (expression -> VAR ASSIGN expression .) ]
  ! MUL             [ reduce using rule 1 (expression -> VAR ASSIGN expression .) ]
  ! DIV             [ reduce using rule 1 (expression -> VAR ASSIGN expression .) ]
  ! POW             [ reduce using rule 1 (expression -> VAR ASSIGN expression .) ]


state 26

    (11) expression -> VAR ASSIGN LIST . LBRACKET INT RBRACKET

    LBRACKET        shift and go to state 32


state 27

    (12) expression -> VAR LBRACKET INT . RBRACKET

    RBRACKET        shift and go to state 33


state 28

    (7) expression -> LPAREN expression RPAREN .

    ADD             reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    SUB             reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    MUL             reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    POW             reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 7 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 7 (expression -> LPAREN expression RPAREN .)


state 29

    (13) expression -> SIN LPAREN expression . RPAREN
    (2) expression -> expression . ADD expression
    (3) expression -> expression . SUB expression
    (4) expression -> expression . MUL expression
    (5) expression -> expression . DIV expression
    (6) expression -> expression . POW expression

    RPAREN          shift and go to state 34
    ADD             shift and go to state 9
    SUB             shift and go to state 10
    MUL             shift and go to state 11
    DIV             shift and go to state 12
    POW             shift and go to state 13


state 30

    (14) expression -> COS LPAREN expression . RPAREN
    (2) expression -> expression . ADD expression
    (3) expression -> expression . SUB expression
    (4) expression -> expression . MUL expression
    (5) expression -> expression . DIV expression
    (6) expression -> expression . POW expression

    RPAREN          shift and go to state 35
    ADD             shift and go to state 9
    SUB             shift and go to state 10
    MUL             shift and go to state 11
    DIV             shift and go to state 12
    POW             shift and go to state 13


state 31

    (15) expression -> TAN LPAREN expression . RPAREN
    (2) expression -> expression . ADD expression
    (3) expression -> expression . SUB expression
    (4) expression -> expression . MUL expression
    (5) expression -> expression . DIV expression
    (6) expression -> expression . POW expression

    RPAREN          shift and go to state 36
    ADD             shift and go to state 9
    SUB             shift and go to state 10
    MUL             shift and go to state 11
    DIV             shift and go to state 12
    POW             shift and go to state 13


state 32

    (11) expression -> VAR ASSIGN LIST LBRACKET . INT RBRACKET

    INT             shift and go to state 37


state 33

    (12) expression -> VAR LBRACKET INT RBRACKET .

    ADD             reduce using rule 12 (expression -> VAR LBRACKET INT RBRACKET .)
    SUB             reduce using rule 12 (expression -> VAR LBRACKET INT RBRACKET .)
    MUL             reduce using rule 12 (expression -> VAR LBRACKET INT RBRACKET .)
    DIV             reduce using rule 12 (expression -> VAR LBRACKET INT RBRACKET .)
    POW             reduce using rule 12 (expression -> VAR LBRACKET INT RBRACKET .)
    $end            reduce using rule 12 (expression -> VAR LBRACKET INT RBRACKET .)
    RPAREN          reduce using rule 12 (expression -> VAR LBRACKET INT RBRACKET .)


state 34

    (13) expression -> SIN LPAREN expression RPAREN .

    ADD             reduce using rule 13 (expression -> SIN LPAREN expression RPAREN .)
    SUB             reduce using rule 13 (expression -> SIN LPAREN expression RPAREN .)
    MUL             reduce using rule 13 (expression -> SIN LPAREN expression RPAREN .)
    DIV             reduce using rule 13 (expression -> SIN LPAREN expression RPAREN .)
    POW             reduce using rule 13 (expression -> SIN LPAREN expression RPAREN .)
    $end            reduce using rule 13 (expression -> SIN LPAREN expression RPAREN .)
    RPAREN          reduce using rule 13 (expression -> SIN LPAREN expression RPAREN .)


state 35

    (14) expression -> COS LPAREN expression RPAREN .

    ADD             reduce using rule 14 (expression -> COS LPAREN expression RPAREN .)
    SUB             reduce using rule 14 (expression -> COS LPAREN expression RPAREN .)
    MUL             reduce using rule 14 (expression -> COS LPAREN expression RPAREN .)
    DIV             reduce using rule 14 (expression -> COS LPAREN expression RPAREN .)
    POW             reduce using rule 14 (expression -> COS LPAREN expression RPAREN .)
    $end            reduce using rule 14 (expression -> COS LPAREN expression RPAREN .)
    RPAREN          reduce using rule 14 (expression -> COS LPAREN expression RPAREN .)


state 36

    (15) expression -> TAN LPAREN expression RPAREN .

    ADD             reduce using rule 15 (expression -> TAN LPAREN expression RPAREN .)
    SUB             reduce using rule 15 (expression -> TAN LPAREN expression RPAREN .)
    MUL             reduce using rule 15 (expression -> TAN LPAREN expression RPAREN .)
    DIV             reduce using rule 15 (expression -> TAN LPAREN expression RPAREN .)
    POW             reduce using rule 15 (expression -> TAN LPAREN expression RPAREN .)
    $end            reduce using rule 15 (expression -> TAN LPAREN expression RPAREN .)
    RPAREN          reduce using rule 15 (expression -> TAN LPAREN expression RPAREN .)


state 37

    (11) expression -> VAR ASSIGN LIST LBRACKET INT . RBRACKET

    RBRACKET        shift and go to state 38


state 38

    (11) expression -> VAR ASSIGN LIST LBRACKET INT RBRACKET .

    ADD             reduce using rule 11 (expression -> VAR ASSIGN LIST LBRACKET INT RBRACKET .)
    SUB             reduce using rule 11 (expression -> VAR ASSIGN LIST LBRACKET INT RBRACKET .)
    MUL             reduce using rule 11 (expression -> VAR ASSIGN LIST LBRACKET INT RBRACKET .)
    DIV             reduce using rule 11 (expression -> VAR ASSIGN LIST LBRACKET INT RBRACKET .)
    POW             reduce using rule 11 (expression -> VAR ASSIGN LIST LBRACKET INT RBRACKET .)
    $end            reduce using rule 11 (expression -> VAR ASSIGN LIST LBRACKET INT RBRACKET .)
    RPAREN          reduce using rule 11 (expression -> VAR ASSIGN LIST LBRACKET INT RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADD in state 20 resolved as shift
WARNING: shift/reduce conflict for SUB in state 20 resolved as shift
WARNING: shift/reduce conflict for MUL in state 20 resolved as shift
WARNING: shift/reduce conflict for DIV in state 20 resolved as shift
WARNING: shift/reduce conflict for POW in state 20 resolved as shift
WARNING: shift/reduce conflict for ADD in state 21 resolved as shift
WARNING: shift/reduce conflict for SUB in state 21 resolved as shift
WARNING: shift/reduce conflict for MUL in state 21 resolved as shift
WARNING: shift/reduce conflict for DIV in state 21 resolved as shift
WARNING: shift/reduce conflict for POW in state 21 resolved as shift
WARNING: shift/reduce conflict for ADD in state 22 resolved as shift
WARNING: shift/reduce conflict for SUB in state 22 resolved as shift
WARNING: shift/reduce conflict for MUL in state 22 resolved as shift
WARNING: shift/reduce conflict for DIV in state 22 resolved as shift
WARNING: shift/reduce conflict for POW in state 22 resolved as shift
WARNING: shift/reduce conflict for ADD in state 23 resolved as shift
WARNING: shift/reduce conflict for SUB in state 23 resolved as shift
WARNING: shift/reduce conflict for MUL in state 23 resolved as shift
WARNING: shift/reduce conflict for DIV in state 23 resolved as shift
WARNING: shift/reduce conflict for POW in state 23 resolved as shift
WARNING: shift/reduce conflict for ADD in state 24 resolved as shift
WARNING: shift/reduce conflict for SUB in state 24 resolved as shift
WARNING: shift/reduce conflict for MUL in state 24 resolved as shift
WARNING: shift/reduce conflict for DIV in state 24 resolved as shift
WARNING: shift/reduce conflict for POW in state 24 resolved as shift
WARNING: shift/reduce conflict for ADD in state 25 resolved as shift
WARNING: shift/reduce conflict for SUB in state 25 resolved as shift
WARNING: shift/reduce conflict for MUL in state 25 resolved as shift
WARNING: shift/reduce conflict for DIV in state 25 resolved as shift
WARNING: shift/reduce conflict for POW in state 25 resolved as shift
